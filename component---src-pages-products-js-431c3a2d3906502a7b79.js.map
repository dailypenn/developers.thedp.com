{"version":3,"sources":["webpack:///./src/pages/products.js"],"names":["CardWrapper","s","div","attrs","className","flush","fixed","CardHeader","h2","POPPINS_MEDIUM","Content","p","POPPINS_REGULAR","getBgColor","idx","color0","color1","bgColor","Math","floor","ImgWrapper","BLUE_PERCENT","RED_PERCENT","StyledImg","Img","CardContent","name","link","description","img","fluid","childImageSharp","href","style","paddingRight","BLUE","RED","color","floatRight","Card","children","StyledRow","Row","StyledPageDescription","PageDescription","Products","products","useStaticQuery","allFile","edges","node","childrenProductsJson","title","margin","lg","target","map","product","md"],"mappings":"2FAAA,yIAmBMA,EAAcC,IAAEC,IAAIC,OAAM,kBAAoB,CAClDC,UAD8B,EAAGA,cAAlB,2EAAGH,CAAH,qLAHN,UACK,mCAWZ,qBAAGI,OAAiB,2BACpB,qBAAGC,OACE,gDASHC,EAAaN,IAAEO,GAAL,0EAAGP,CAAH,yEAKZQ,KAGEC,EAAUT,IAAEU,EAAL,uEAAGV,CAAH,gIAMTW,KAOEC,EAAa,SAACC,EAAKC,EAAQC,GAC/B,IACIC,EAAUH,EAAM,GAAM,EAAIC,EAASC,EAUvC,OAXaE,KAAKC,MAAML,EAAM,GAAK,GAAM,IAKrCG,EADEA,IAAYF,EACJC,EAEAD,GAIPE,GAGHG,EAAanB,IAAEC,IAAL,0EAAGD,CAAH,0CACM,gBAAGa,EAAH,EAAGA,IAAH,OAClBD,EAAWC,EAAKO,YAAa,IAAMC,YAAY,SAI7CC,EAAYtB,YAAEuB,KAAL,yEAAGvB,CAAH,oFAUTwB,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,IAAKf,EAAjC,EAAiCA,IAAjC,OAClB,oCACE,kBAACM,EAAD,CAAYN,IAAKA,GACf,kBAACS,EAAD,CAAWO,MAAOD,EAAIE,gBAAgBD,SAExC,kBAACvB,EAAD,CAAYyB,KAAML,GAAOD,GACzB,kBAAChB,EAAD,KACE,uBAAGuB,MAAO,CAAEC,aAAc,SAAWN,EAArC,KACA,kBAAC,IAAD,CACEX,QAASJ,EAAWC,EAAKqB,IAAMC,KAC/BC,MArFG,UAsFHC,YAAU,EACVX,KAAMA,OAMRY,EAAO,SAAC,GAAD,IAAGnC,EAAH,EAAGA,UAAWoC,EAAd,EAAcA,SAAUnC,EAAxB,EAAwBA,MAAxB,OACX,kBAACL,EAAD,CAAaI,UAAWA,EAAWC,MAAOA,GACvCmC,IAICC,EAAYxC,YAAEyC,KAAL,yEAAGzC,CAAH,8DAQT0C,EAAwB1C,YAAE2C,KAAL,qFAAG3C,CAAH,sEAsEZ4C,UA9DE,WACf,IAyBgCC,EAzBnBC,yBAAe,cA0BnBC,QAAQC,MAAM,GADrBC,KAAQC,qBAGV,OACE,kBAAC,IAAD,CAAWC,MAAM,eACf,kBAACX,EAAD,CAAWR,MAAO,CAAEoB,OAAQ,kBAC1B,kBAAC,IAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,uBACA,kBAACX,EAAD,gXAOE,kBAAC,IAAD,CAAcX,KAAK,+BAA+BuB,OAAO,UAAzD,mBAKJ,kBAAC,IAAD,CAAKD,GAAI,GACP,kBAAC,IAAD,KACGR,EAASU,KAAI,SAACC,EAAS3C,GAAV,OACZ,kBAAC,IAAD,CAAK4C,GAAI,GACP,kBAACnB,EAAD,KACE,kBAACd,EAAD,iBAAiBgC,EAAjB,CAA0B3C,IAAKA","file":"component---src-pages-products-js-431c3a2d3906502a7b79.js","sourcesContent":["import React from 'react'\r\nimport s from 'styled-components'\r\nimport Img from 'gatsby-image'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nimport {\r\n  Container,\r\n  Chevron,\r\n  PageTitle,\r\n  PageDescription,\r\n  StyledAnchor\r\n} from '../components'\r\nimport { POPPINS_MEDIUM, POPPINS_REGULAR } from '../styles/fonts'\r\nimport { BLUE_PERCENT, RED_PERCENT, BLUE, RED } from '../styles/constants'\r\n\r\nconst WHITE = `#FFFFFF`\r\nconst BOX_SHADOW = `0px 5px 20px rgba(0, 0, 0, 0.1)`\r\n\r\nconst CardWrapper = s.div.attrs(({ className }) => ({\r\n  className\r\n}))`\r\n  background-color: ${WHITE};\r\n  border-radius: 15px;\r\n  box-shadow: ${BOX_SHADOW};\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  ${({ flush }) => flush || `padding-bottom: 30px;`}\r\n  ${({ fixed }) =>\r\n    fixed ||\r\n    `:hover {\r\n    transform: scale(1.01);\r\n  }`}\r\n  transition: all 0.3s;\r\n  margin-bottom: 60px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst CardHeader = s.h2`\r\n  padding-right: 40px;\r\n  padding-left: 40px;\r\n  margin-top: 30px;\r\n  color: black;\r\n  ${POPPINS_MEDIUM}\r\n`\r\n\r\nconst Content = s.p`\r\n  margin-right: 40px;\r\n  margin-left: 40px;\r\n  color: black;\r\n  font-size: 90%;\r\n  margin-top: 3rem;\r\n  ${POPPINS_REGULAR}\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 2rem;\r\n  }\r\n`\r\n\r\nconst getBgColor = (idx, color0, color1) => {\r\n  const flip = Math.floor(idx / 2) % 2 !== 0\r\n  let bgColor = idx % 2 === 0 ? color0 : color1\r\n\r\n  if (flip) {\r\n    if (bgColor === color0) {\r\n      bgColor = color1\r\n    } else {\r\n      bgColor = color0\r\n    }\r\n  }\r\n\r\n  return bgColor\r\n}\r\n\r\nconst ImgWrapper = s.div`\r\n  background-color: ${({ idx }) =>\r\n    getBgColor(idx, BLUE_PERCENT(0.1), RED_PERCENT(0.32))};\r\n  padding: 2rem 0;\r\n`\r\n\r\nconst StyledImg = s(Img)`\r\n  width: 270px;\r\n  display: block;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 992px) {\r\n    width: 200px;\r\n  }\r\n`\r\n\r\nconst CardContent = ({ name, link, description, img, idx }) => (\r\n  <>\r\n    <ImgWrapper idx={idx}>\r\n      <StyledImg fluid={img.childImageSharp.fluid} />\r\n    </ImgWrapper>\r\n    <CardHeader href={link}>{name}</CardHeader>\r\n    <Content>\r\n      <p style={{ paddingRight: '1rem' }}>{description} </p>\r\n      <Chevron\r\n        bgColor={getBgColor(idx, BLUE, RED)}\r\n        color={WHITE}\r\n        floatRight\r\n        link={link}\r\n      />\r\n    </Content>\r\n  </>\r\n)\r\n\r\nconst Card = ({ className, children, flush }) => (\r\n  <CardWrapper className={className} flush={flush}>\r\n    {children}\r\n  </CardWrapper>\r\n)\r\n\r\nconst StyledRow = s(Row)`\r\n  padding: 0 3rem;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 0 1rem;\r\n  }\r\n`\r\n\r\nconst StyledPageDescription = s(PageDescription)`\r\n  padding-right: 2rem;\r\n\r\n  @media (max-width: 992px) {\r\n    padding-right: 0rem;\r\n  }\r\n`\r\n\r\nconst Products = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allFile(filter: { relativePath: { eq: \"products.json\" } }) {\r\n        edges {\r\n          node {\r\n            childrenProductsJson {\r\n              img {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 1100) {\r\n                    ...GatsbyImageSharpFluid\r\n                    src\r\n                  }\r\n                }\r\n              }\r\n              name\r\n              description\r\n              link\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const {\r\n    node: { childrenProductsJson: products }\r\n  } = data.allFile.edges[0]\r\n\r\n  return (\r\n    <Container title=\"Products | \">\r\n      <StyledRow style={{ margin: '5rem 0 2rem 0' }}>\r\n        <Col lg={4}>\r\n          <PageTitle> Our Products </PageTitle>\r\n          <StyledPageDescription>\r\n            Building useful and elegant products is the central goal that unites\r\n            all of our members. The belief that we are doing great work is what\r\n            drives the department forward and keeps us motivated. At DP Tech, we\r\n            build both short term projects such as bi-weekly project pages and\r\n            long term projects including DP+ and websites redesign. For more\r\n            details, checkout our&nbsp;\r\n            <StyledAnchor href=\"https://github.com/dailypenn\" target=\"_blank\">\r\n              GitHub repos.\r\n            </StyledAnchor>\r\n          </StyledPageDescription>\r\n        </Col>\r\n        <Col lg={8}>\r\n          <Row>\r\n            {products.map((product, idx) => (\r\n              <Col md={6}>\r\n                <Card>\r\n                  <CardContent {...product} idx={idx} />\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Col>\r\n      </StyledRow>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Products\r\n"],"sourceRoot":""}